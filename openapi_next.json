{
  "openapi": "3.1.0",
  "info": {
    "title": "Adamik",
    "version": "0.1.0",
    "description": "Adamik API reference"
  },
  "servers": [
    {
      "url": "https://api-staging.adamik.io"
    }
  ],
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "paths": {
    "/api": {
      "get": {
        "tags": [""],
        "summary": "Open API Specification",
        "description": "Provides the Open API specification of the Adamik API",
        "responses": {
          "200": {
            "description": "Returns the OpenAPI spec of the Adamik API, in JSON format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/chains": {
      "get": {
        "tags": ["Chain"],
        "summary": "Get Supported Chains",
        "description": "Retrieves a list of all supported blockchain networks with their detailed information.",
        "responses": {
          "200": {
            "description": "Returns a list of names and detailed information for all supported blockchain networks.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "chains": {
                      "type": "object",
                      "properties": {
                        "algorand": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "ethereum": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "sepolia": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "holesky": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "zksync": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "zksync-sepolia": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "injective-evm-testnet": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "base": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "base-sepolia": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "optimism": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "optimism-sepolia": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "arbitrum": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "arbitrum-sepolia": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "polygon": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "polygon-amoy": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "bsc": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "bsc-testnet": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "linea": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "linea-sepolia": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "avalanche": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "avalanche-fuji": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "gnosis": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "gnosis-chiado": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "moonbeam": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "moonriver": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "moonbase": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "fantom": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "mantle": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "chiliz": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "chiliz-testnet": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "ton": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "tron": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "rootstock": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "rootstock-testnet": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "bitcoin": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "bitcoin-testnet": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "litecoin": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "dogecoin": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "starknet": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "monad-private-testnet": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "bitsong": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "chihuahua": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "seda": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "persistence": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "comdex": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "humans-ai": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "ki": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "mars-hub": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "provenance": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "quicksilver": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "saga": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "ux-chain": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "kava": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "sei": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "fetch-ai": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "cosmoshub": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "osmosis": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "celestia": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "dydx": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "axelar": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "evmos": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "irisnet": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "juno": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "lum-network": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "omniflix": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "medibloc": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "passage": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "quasar": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "sommelier": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "shentu": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "stride": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "neutron": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "terra2": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "akash": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "dymension": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "band": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "stargaze": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "kyve": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "likecoin": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "osmosis-testnet": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "celestia-testnet": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "cosmoshub-testnet": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        },
                        "injective": {
                          "type": "object",
                          "properties": {
                            "family": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmos",
                                "evm",
                                "bitcoin",
                                "tron",
                                "ton",
                                "starknet"
                              ]
                            },
                            "id": {
                              "$ref": "#/components/schemas/ChainId"
                            },
                            "nativeId": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "ticker": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number"
                            },
                            "isTestnetFor": {
                              "type": "string"
                            },
                            "supportedFeatures": {
                              "$ref": "#/components/schemas/ChainSupportedFeatures"
                            }
                          },
                          "required": [
                            "family",
                            "id",
                            "nativeId",
                            "name",
                            "ticker",
                            "decimals",
                            "supportedFeatures"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "required": ["chains"]
                }
              }
            }
          }
        }
      }
    },
    "/api/chains/{chainId}": {
      "get": {
        "tags": ["Chain"],
        "summary": "Get Chain Details",
        "description": "Retrieves detailed information about a specific blockchain network identified by chain ID.",
        "parameters": [
          {
            "in": "path",
            "name": "chainId",
            "description": "Unique adamik identifier of the chain",
            "schema": {
              "$ref": "#/components/schemas/ChainId"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returns detailed data about the specified blockchain, including its identifier, name, family classification, supported units of currency, and additional configuration parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "chain": {
                      "type": "object",
                      "properties": {
                        "family": {
                          "type": "string",
                          "enum": [
                            "algorand",
                            "cosmos",
                            "evm",
                            "bitcoin",
                            "tron",
                            "ton",
                            "starknet"
                          ]
                        },
                        "id": {
                          "$ref": "#/components/schemas/ChainId"
                        },
                        "nativeId": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "ticker": {
                          "type": "string"
                        },
                        "decimals": {
                          "type": "number"
                        },
                        "isTestnetFor": {
                          "type": "string"
                        },
                        "supportedFeatures": {
                          "$ref": "#/components/schemas/ChainSupportedFeatures"
                        }
                      },
                      "required": [
                        "family",
                        "id",
                        "nativeId",
                        "name",
                        "ticker",
                        "decimals",
                        "supportedFeatures"
                      ]
                    }
                  },
                  "required": ["chain"]
                }
              }
            }
          }
        }
      }
    },
    "/api/{chainId}/token/{tokenId}": {
      "get": {
        "tags": ["Chain"],
        "summary": "Get Token Details",
        "description": "Retrieves detailed information about a specific token for a blockchain network, identified by chain ID and token ID.",
        "parameters": [
          {
            "in": "path",
            "name": "chainId",
            "schema": {
              "type": "string",
              "enum": [
                "algorand",
                "cosmoshub",
                "cosmoshub-testnet",
                "osmosis",
                "osmosis-testnet",
                "celestia",
                "celestia-testnet",
                "dydx",
                "axelar",
                "ethereum",
                "sepolia",
                "holesky",
                "base",
                "base-sepolia",
                "optimism",
                "arbitrum",
                "polygon",
                "polygon-amoy",
                "bsc",
                "bsc-testnet",
                "linea",
                "linea-sepolia",
                "avalanche",
                "gnosis",
                "gnosis-chiado",
                "moonbeam",
                "moonriver",
                "moonbase",
                "fantom",
                "ton",
                "injective",
                "akash",
                "band",
                "dymension",
                "kyve",
                "neutron",
                "terra2",
                "stargaze",
                "tron",
                "evmos",
                "irisnet",
                "juno",
                "lum-network",
                "omniflix",
                "sei",
                "medibloc",
                "passage",
                "quasar",
                "seda",
                "sommelier",
                "shentu",
                "stride",
                "chihuahua",
                "bitsong",
                "persistence",
                "comdex",
                "fetch-ai",
                "humans-ai",
                "ki",
                "likecoin",
                "mars-hub",
                "provenance",
                "quicksilver",
                "saga",
                "ux-chain",
                "kava"
              ]
            },
            "required": true
          },
          {
            "in": "path",
            "name": "tokenId",
            "description": "Token ID. Format depends on the chain, e.g. contract address for EVM chains.",
            "schema": {
              "type": "string",
              "description": "Token ID. Format depends on the chain, e.g. contract address for EVM chains.",
              "examples": ["0xdAC17F958D2ee523a2206206994597C13D831ec7"]
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returns detailed data about the token on the specified blockchain.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "TRC10",
                            "TRC20",
                            "ASA",
                            "ERC20",
                            "IBC",
                            "JETTON"
                          ]
                        },
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "ticker": {
                          "type": "string"
                        },
                        "decimals": {
                          "type": "string"
                        },
                        "contractAddress": {
                          "type": "string"
                        }
                      },
                      "required": ["type", "id", "name", "ticker", "decimals"]
                    }
                  },
                  "required": ["token"]
                }
              }
            }
          }
        }
      }
    },
    "/api/{chainId}/validators": {
      "get": {
        "tags": ["Chain"],
        "summary": "Get Chain Validators",
        "description": "Lists validators for a specified chain ID, including their operational status and commission rates. Useful for delegation operations on proof-of-stake blockchains.",
        "parameters": [
          {
            "in": "path",
            "name": "chainId",
            "schema": {
              "type": "string",
              "enum": [
                "cosmoshub",
                "cosmoshub-testnet",
                "osmosis",
                "osmosis-testnet",
                "celestia",
                "celestia-testnet",
                "dydx",
                "axelar",
                "injective",
                "akash",
                "band",
                "dymension",
                "kyve",
                "neutron",
                "terra2",
                "stargaze",
                "evmos",
                "irisnet",
                "juno",
                "lum-network",
                "omniflix",
                "sei",
                "medibloc",
                "passage",
                "quasar",
                "seda",
                "sommelier",
                "shentu",
                "stride",
                "chihuahua",
                "bitsong",
                "persistence",
                "comdex",
                "fetch-ai",
                "humans-ai",
                "ki",
                "likecoin",
                "mars-hub",
                "provenance",
                "quicksilver",
                "saga",
                "ux-chain",
                "kava"
              ]
            },
            "required": true
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "Token from the previous response of this endpoint. Provide it here to fetch the next page of results.",
            "schema": {
              "type": "string",
              "description": "Token from the previous response of this endpoint. Provide it here to fetch the next page of results."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of validators, their status, and commission details for the specified chain ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "chainId": {
                      "type": "string",
                      "enum": [
                        "cosmoshub",
                        "cosmoshub-testnet",
                        "osmosis",
                        "osmosis-testnet",
                        "celestia",
                        "celestia-testnet",
                        "dydx",
                        "axelar",
                        "injective",
                        "akash",
                        "band",
                        "dymension",
                        "kyve",
                        "neutron",
                        "terra2",
                        "stargaze",
                        "evmos",
                        "irisnet",
                        "juno",
                        "lum-network",
                        "omniflix",
                        "sei",
                        "medibloc",
                        "passage",
                        "quasar",
                        "seda",
                        "sommelier",
                        "shentu",
                        "stride",
                        "chihuahua",
                        "bitsong",
                        "persistence",
                        "comdex",
                        "fetch-ai",
                        "humans-ai",
                        "ki",
                        "likecoin",
                        "mars-hub",
                        "provenance",
                        "quicksilver",
                        "saga",
                        "ux-chain",
                        "kava"
                      ]
                    },
                    "validators": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "address": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "commission": {
                            "type": "number"
                          }
                        },
                        "required": ["address", "name"]
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "nextPage": {
                          "anyOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "null"
                            }
                          ],
                          "description": "Use the token from the previous response to retrieve the next page of results."
                        }
                      },
                      "required": ["nextPage"]
                    }
                  },
                  "required": ["chainId", "validators", "pagination"]
                }
              }
            }
          }
        }
      }
    },
    "/api/{chainId}/transaction/{transactionId}": {
      "get": {
        "tags": ["Transaction"],
        "summary": "Get Transaction Details",
        "description": "Retrieves detailed information about a specific transaction for a blockchain network, identified by chain ID and transaction ID.",
        "parameters": [
          {
            "in": "path",
            "name": "chainId",
            "schema": {
              "type": "string",
              "enum": [
                "algorand",
                "cosmoshub",
                "osmosis",
                "celestia",
                "dydx",
                "axelar",
                "ethereum",
                "sepolia",
                "holesky",
                "base",
                "base-sepolia",
                "optimism",
                "arbitrum",
                "bitcoin",
                "bitcoin-testnet",
                "polygon",
                "polygon-amoy",
                "bsc",
                "bsc-testnet",
                "linea",
                "linea-sepolia",
                "avalanche",
                "gnosis",
                "gnosis-chiado",
                "moonbeam",
                "moonriver",
                "moonbase",
                "fantom",
                "litecoin",
                "dogecoin",
                "ton",
                "injective",
                "akash",
                "neutron",
                "tron",
                "evmos",
                "juno",
                "sei",
                "stride",
                "kava",
                "starknet"
              ]
            },
            "required": true
          },
          {
            "in": "path",
            "name": "transactionId",
            "description": "Transaction ID. Usually a hash but can be different depending on the chain.",
            "schema": {
              "type": "string",
              "description": "Transaction ID. Usually a hash but can be different depending on the chain.",
              "examples": [
                "559c1be45865069c6070529e43c69752d73438cbb1d04e4f301e94cd68bf7422"
              ]
            },
            "required": true
          },
          {
            "in": "query",
            "name": "include",
            "description": "Optional filter to request specific data. Use a single 'include' parameter with comma-separated values. Possible values are 'parsed' and 'raw'.",
            "schema": {
              "type": "string",
              "description": "Optional filter to request specific data. Use a single 'include' parameter with comma-separated values. Possible values are 'parsed' and 'raw'.",
              "example": "parsed,raw"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returns detailed data about the transaction on the specified blockchain.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "transaction": {
                      "type": "object",
                      "properties": {
                        "raw": {},
                        "parsed": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "mode": {
                              "anyOf": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "deployAccount",
                                    "transfer",
                                    "transferToken",
                                    "delegate",
                                    "redelegate",
                                    "undelegate",
                                    "claimRewards"
                                  ]
                                },
                                {
                                  "type": "string",
                                  "const": "unknown"
                                }
                              ]
                            },
                            "state": {
                              "type": "string",
                              "enum": [
                                "pending",
                                "unconfirmed",
                                "confirmed",
                                "failed",
                                "unknown"
                              ]
                            },
                            "tokenId": {
                              "type": "string"
                            },
                            "blockHeight": {
                              "type": "string"
                            },
                            "timestamp": {
                              "type": "string",
                              "description": "Timestamp in milliseconds"
                            },
                            "fees": {
                              "type": "object",
                              "properties": {
                                "amount": {
                                  "type": "string",
                                  "description": "Amount to use, either provided or computed by the API"
                                },
                                "ticker": {
                                  "type": "string",
                                  "description": "Specific currency for that amount. If not provided, the amount is in the native currency of the chain."
                                }
                              },
                              "required": ["amount"]
                            },
                            "gas": {
                              "type": "string",
                              "description": "Transaction gas computed by the API, when relevant for the chain."
                            },
                            "nonce": {
                              "type": "string",
                              "description": "Transaction sequence number, when relevant for the chain."
                            },
                            "memo": {
                              "type": "string",
                              "description": "Optional free text field, that is supported for some chains."
                            },
                            "senders": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "address": {
                                    "type": "string"
                                  },
                                  "amount": {
                                    "type": "string",
                                    "description": "Amount to use, either provided or computed by the API"
                                  },
                                  "ticker": {
                                    "type": "string",
                                    "description": "Specific currency for that amount. If not provided, the amount is in the native currency of the chain."
                                  }
                                },
                                "required": ["address", "amount"]
                              }
                            },
                            "recipients": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "address": {
                                    "type": "string"
                                  },
                                  "amount": {
                                    "type": "string",
                                    "description": "Amount to use, either provided or computed by the API"
                                  },
                                  "ticker": {
                                    "type": "string",
                                    "description": "Specific currency for that amount. If not provided, the amount is in the native currency of the chain."
                                  }
                                },
                                "required": ["address", "amount"]
                              }
                            },
                            "validators": {
                              "type": "object",
                              "properties": {
                                "source": {
                                  "type": "object",
                                  "properties": {
                                    "address": {
                                      "type": "string"
                                    },
                                    "amount": {
                                      "type": "string",
                                      "description": "Amount to use, either provided or computed by the API"
                                    },
                                    "ticker": {
                                      "type": "string",
                                      "description": "Specific currency for that amount. If not provided, the amount is in the native currency of the chain."
                                    }
                                  },
                                  "required": ["address", "amount"]
                                },
                                "target": {
                                  "type": "object",
                                  "properties": {
                                    "address": {
                                      "type": "string"
                                    },
                                    "amount": {
                                      "type": "string",
                                      "description": "Amount to use, either provided or computed by the API"
                                    },
                                    "ticker": {
                                      "type": "string",
                                      "description": "Specific currency for that amount. If not provided, the amount is in the native currency of the chain."
                                    }
                                  },
                                  "required": ["address", "amount"]
                                }
                              }
                            }
                          },
                          "required": ["id", "mode", "state", "fees"]
                        }
                      }
                    },
                    "status": {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": ["message"]
                          }
                        },
                        "warnings": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": ["message"]
                          }
                        }
                      },
                      "required": ["errors", "warnings"]
                    }
                  },
                  "required": ["transaction", "status"]
                }
              }
            }
          }
        }
      }
    },
    "/api/{chainId}/address/encode": {
      "post": {
        "tags": ["Utils"],
        "summary": "Pubkey to Address",
        "description": "Encodes the provided public key to one or multiple addresses, for the given chain ID.       Each address is labeled with a type, which may be \"default\" when there is only one address.",
        "parameters": [
          {
            "in": "path",
            "name": "chainId",
            "description": "Unique adamik identifier of the chain",
            "schema": {
              "$ref": "#/components/schemas/ChainId"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pubkey": {
                    "type": "string"
                  }
                },
                "required": ["pubkey"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns a set of addresses, one for each supported type, depending on the chain",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "chainId": {
                      "$ref": "#/components/schemas/ChainId"
                    },
                    "pubkey": {
                      "type": "string"
                    },
                    "addresses": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "address": {
                            "type": "string"
                          }
                        },
                        "required": ["type", "address"]
                      }
                    }
                  },
                  "required": ["chainId", "pubkey", "addresses"]
                }
              }
            }
          }
        }
      }
    },
    "/api/{chainId}/address/validate": {
      "post": {
        "tags": ["Utils"],
        "summary": "Validate Address",
        "description": "Validates the specified address for the given chain ID, returning true if the address is valid, otherwise false.",
        "parameters": [
          {
            "in": "path",
            "name": "chainId",
            "description": "Unique adamik identifier of the chain",
            "schema": {
              "$ref": "#/components/schemas/ChainId"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "address": {
                    "type": "string"
                  }
                },
                "required": ["address"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns true if the address is valid for the specified chain ID, otherwise false.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "chainId": {
                      "$ref": "#/components/schemas/ChainId"
                    },
                    "valid": {
                      "type": "boolean"
                    }
                  },
                  "required": ["chainId", "valid"]
                }
              }
            }
          }
        }
      }
    },
    "/api/{chainId}/account/{accountId}/state": {
      "get": {
        "tags": ["Account"],
        "summary": "Get Account State (Balances)",
        "description": "Returns the state of a specified account identifier (address or xpub) and chain ID, focusing on balance information. The response includes details on native asset balances, token balances, and staking balances. This endpoint supports optional filters to refine the results, making it essential for wallet applications to display accurate and tailored account information.",
        "parameters": [
          {
            "in": "path",
            "name": "chainId",
            "schema": {
              "type": "string",
              "enum": [
                "algorand",
                "cosmoshub",
                "cosmoshub-testnet",
                "osmosis",
                "osmosis-testnet",
                "celestia",
                "celestia-testnet",
                "dydx",
                "axelar",
                "ethereum",
                "sepolia",
                "holesky",
                "zksync",
                "zksync-sepolia",
                "injective-evm-testnet",
                "base",
                "base-sepolia",
                "optimism",
                "optimism-sepolia",
                "arbitrum",
                "arbitrum-sepolia",
                "bitcoin",
                "monad-private-testnet",
                "bitcoin-testnet",
                "polygon",
                "polygon-amoy",
                "bsc",
                "bsc-testnet",
                "linea",
                "linea-sepolia",
                "avalanche",
                "avalanche-fuji",
                "gnosis",
                "gnosis-chiado",
                "moonbeam",
                "moonriver",
                "moonbase",
                "fantom",
                "mantle",
                "rootstock",
                "rootstock-testnet",
                "litecoin",
                "dogecoin",
                "ton",
                "chiliz",
                "chiliz-testnet",
                "injective",
                "akash",
                "band",
                "dymension",
                "kyve",
                "neutron",
                "terra2",
                "stargaze",
                "tron",
                "evmos",
                "irisnet",
                "juno",
                "lum-network",
                "omniflix",
                "sei",
                "medibloc",
                "passage",
                "quasar",
                "seda",
                "sommelier",
                "shentu",
                "stride",
                "chihuahua",
                "bitsong",
                "persistence",
                "comdex",
                "fetch-ai",
                "humans-ai",
                "ki",
                "likecoin",
                "mars-hub",
                "provenance",
                "quicksilver",
                "saga",
                "ux-chain",
                "kava",
                "starknet"
              ]
            },
            "required": true
          },
          {
            "in": "path",
            "name": "accountId",
            "description": "Account identifier (address, xpub, etc) for the specified chain ID",
            "schema": {
              "type": "string",
              "description": "Account identifier (address, xpub, etc) for the specified chain ID"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "include",
            "description": "Optional filter to request specific data. Use a single 'include' parameter with comma-separated values.",
            "schema": {
              "type": "string",
              "description": "Optional filter to request specific data. Use a single 'include' parameter with comma-separated values.",
              "example": "native,tokens,staking"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the current balance information for the specified address and chain ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "chainId": {
                      "type": "string",
                      "enum": [
                        "algorand",
                        "cosmoshub",
                        "cosmoshub-testnet",
                        "osmosis",
                        "osmosis-testnet",
                        "celestia",
                        "celestia-testnet",
                        "dydx",
                        "axelar",
                        "ethereum",
                        "sepolia",
                        "holesky",
                        "zksync",
                        "zksync-sepolia",
                        "injective-evm-testnet",
                        "base",
                        "base-sepolia",
                        "optimism",
                        "optimism-sepolia",
                        "arbitrum",
                        "arbitrum-sepolia",
                        "bitcoin",
                        "monad-private-testnet",
                        "bitcoin-testnet",
                        "polygon",
                        "polygon-amoy",
                        "bsc",
                        "bsc-testnet",
                        "linea",
                        "linea-sepolia",
                        "avalanche",
                        "avalanche-fuji",
                        "gnosis",
                        "gnosis-chiado",
                        "moonbeam",
                        "moonriver",
                        "moonbase",
                        "fantom",
                        "mantle",
                        "rootstock",
                        "rootstock-testnet",
                        "litecoin",
                        "dogecoin",
                        "ton",
                        "chiliz",
                        "chiliz-testnet",
                        "injective",
                        "akash",
                        "band",
                        "dymension",
                        "kyve",
                        "neutron",
                        "terra2",
                        "stargaze",
                        "tron",
                        "evmos",
                        "irisnet",
                        "juno",
                        "lum-network",
                        "omniflix",
                        "sei",
                        "medibloc",
                        "passage",
                        "quasar",
                        "seda",
                        "sommelier",
                        "shentu",
                        "stride",
                        "chihuahua",
                        "bitsong",
                        "persistence",
                        "comdex",
                        "fetch-ai",
                        "humans-ai",
                        "ki",
                        "likecoin",
                        "mars-hub",
                        "provenance",
                        "quicksilver",
                        "saga",
                        "ux-chain",
                        "kava",
                        "starknet"
                      ]
                    },
                    "accountId": {
                      "type": "string"
                    },
                    "balances": {
                      "type": "object",
                      "properties": {
                        "native": {
                          "type": "object",
                          "properties": {
                            "available": {
                              "type": "string",
                              "description": "Amount of native currency that is immediately available for using. This excludes amounts that are locked in staking positions."
                            },
                            "unconfirmed": {
                              "type": "string",
                              "description": "Amount of native currency that is either pending (mempool) or not yet fully confirmed (not enough block confirmations). Relevant for chains with long confirmation times (like Bitcoin)."
                            },
                            "total": {
                              "type": "string",
                              "description": "Total amount of native currency owned by the account, including both available and locked amounts (staking positions)."
                            }
                          },
                          "required": ["available", "total"]
                        },
                        "tokens": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "token": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "TRC10",
                                      "TRC20",
                                      "ASA",
                                      "ERC20",
                                      "IBC",
                                      "JETTON"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "ticker": {
                                    "type": "string"
                                  },
                                  "decimals": {
                                    "type": "string"
                                  },
                                  "contractAddress": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "id",
                                  "name",
                                  "ticker",
                                  "decimals"
                                ]
                              },
                              "amount": {
                                "type": "string",
                                "description": "Current balance of this token owned by the account. The amount is expressed in the token's smallest unit (based on its decimals)."
                              }
                            },
                            "required": ["token", "amount"]
                          }
                        },
                        "staking": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "string",
                              "description": "Total amount of native currency involved in staking positions (locked + unlocking + unlocked)."
                            },
                            "locked": {
                              "type": "string",
                              "description": "Amount of native currency currently locked in staking positions."
                            },
                            "unlocking": {
                              "type": "string",
                              "description": "Amount of native currency that is in the process of being unstaked (during unbonding period)."
                            },
                            "unlocked": {
                              "type": "string",
                              "description": "Amount of native currency that has completed the unbonding period and is ready to be withdrawn."
                            },
                            "positions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "validatorAddresses": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "List of validator addresses involved in staking position."
                                  },
                                  "amount": {
                                    "type": "string",
                                    "description": "Amount of native currency used in this specific staking position."
                                  },
                                  "status": {
                                    "type": "string",
                                    "enum": [
                                      "free",
                                      "locked",
                                      "unlocking",
                                      "unlocked"
                                    ]
                                  },
                                  "completionDate": {
                                    "type": "number",
                                    "description": "Unix timestamp (in milliseconds) when the unbonding period will complete. Only present for positions with 'unlocking' status."
                                  }
                                },
                                "required": [
                                  "validatorAddresses",
                                  "amount",
                                  "status"
                                ]
                              },
                              "description": "Detailed list of individual staking positions."
                            },
                            "rewards": {
                              "type": "object",
                              "properties": {
                                "native": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "validatorAddress": {
                                        "type": "string"
                                      },
                                      "amount": {
                                        "type": "string",
                                        "description": "Amount of unclaimed staking rewards in native currency from this validator."
                                      }
                                    },
                                    "required": ["validatorAddress", "amount"]
                                  },
                                  "description": "List of unclaimed staking rewards in native currency, per validator."
                                },
                                "tokens": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "token": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "TRC10",
                                              "TRC20",
                                              "ASA",
                                              "ERC20",
                                              "IBC",
                                              "JETTON"
                                            ]
                                          },
                                          "id": {
                                            "type": "string"
                                          },
                                          "name": {
                                            "type": "string"
                                          },
                                          "ticker": {
                                            "type": "string"
                                          },
                                          "decimals": {
                                            "type": "string"
                                          },
                                          "contractAddress": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "id",
                                          "name",
                                          "ticker",
                                          "decimals"
                                        ]
                                      },
                                      "validatorAddress": {
                                        "type": "string"
                                      },
                                      "amount": {
                                        "type": "string",
                                        "description": "Amount of unclaimed staking rewards in this token. The amount is expressed in the token's smallest unit."
                                      }
                                    },
                                    "required": ["token", "amount"]
                                  }
                                }
                              },
                              "required": ["native", "tokens"],
                              "description": "Information about unclaimed staking rewards, both in native currency and tokens."
                            }
                          },
                          "required": [
                            "total",
                            "locked",
                            "unlocking",
                            "unlocked",
                            "positions"
                          ]
                        }
                      }
                    }
                  },
                  "required": ["chainId", "accountId", "balances"]
                }
              }
            }
          }
        }
      }
    },
    "/api/{chainId}/account/{accountId}/state/tokens": {
      "get": {
        "tags": ["Account"],
        "summary": "Get Account Tokens (paginated)",
        "description": "Returns the tokens (amount and details) held by a specified account identifier and chain ID. This endpoint allows for pagination over the returned tokens.",
        "parameters": [
          {
            "in": "path",
            "name": "chainId",
            "schema": {
              "type": "string",
              "enum": [
                "algorand",
                "cosmoshub",
                "cosmoshub-testnet",
                "osmosis",
                "osmosis-testnet",
                "celestia",
                "celestia-testnet",
                "dydx",
                "axelar",
                "ethereum",
                "sepolia",
                "holesky",
                "base",
                "base-sepolia",
                "optimism",
                "arbitrum",
                "polygon",
                "polygon-amoy",
                "bsc",
                "bsc-testnet",
                "linea",
                "linea-sepolia",
                "avalanche",
                "gnosis",
                "gnosis-chiado",
                "moonbeam",
                "moonriver",
                "moonbase",
                "fantom",
                "ton",
                "injective",
                "akash",
                "band",
                "dymension",
                "kyve",
                "neutron",
                "terra2",
                "stargaze",
                "tron",
                "evmos",
                "irisnet",
                "juno",
                "lum-network",
                "omniflix",
                "sei",
                "medibloc",
                "passage",
                "quasar",
                "seda",
                "sommelier",
                "shentu",
                "stride",
                "chihuahua",
                "bitsong",
                "persistence",
                "comdex",
                "fetch-ai",
                "humans-ai",
                "ki",
                "likecoin",
                "mars-hub",
                "provenance",
                "quicksilver",
                "saga",
                "ux-chain",
                "kava",
                "starknet"
              ]
            },
            "required": true
          },
          {
            "in": "path",
            "name": "accountId",
            "description": "Account identifier (address, xpub, etc) for the specified chain ID",
            "schema": {
              "type": "string",
              "description": "Account identifier (address, xpub, etc) for the specified chain ID"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "Token from the previous response of this endpoint. Provide it here to fetch the next page of results.",
            "schema": {
              "type": "string",
              "description": "Token from the previous response of this endpoint. Provide it here to fetch the next page of results."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the current tokens information for the specified address and chain ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "chainId": {
                      "type": "string",
                      "enum": [
                        "algorand",
                        "cosmoshub",
                        "cosmoshub-testnet",
                        "osmosis",
                        "osmosis-testnet",
                        "celestia",
                        "celestia-testnet",
                        "dydx",
                        "axelar",
                        "ethereum",
                        "sepolia",
                        "holesky",
                        "base",
                        "base-sepolia",
                        "optimism",
                        "arbitrum",
                        "polygon",
                        "polygon-amoy",
                        "bsc",
                        "bsc-testnet",
                        "linea",
                        "linea-sepolia",
                        "avalanche",
                        "gnosis",
                        "gnosis-chiado",
                        "moonbeam",
                        "moonriver",
                        "moonbase",
                        "fantom",
                        "ton",
                        "injective",
                        "akash",
                        "band",
                        "dymension",
                        "kyve",
                        "neutron",
                        "terra2",
                        "stargaze",
                        "tron",
                        "evmos",
                        "irisnet",
                        "juno",
                        "lum-network",
                        "omniflix",
                        "sei",
                        "medibloc",
                        "passage",
                        "quasar",
                        "seda",
                        "sommelier",
                        "shentu",
                        "stride",
                        "chihuahua",
                        "bitsong",
                        "persistence",
                        "comdex",
                        "fetch-ai",
                        "humans-ai",
                        "ki",
                        "likecoin",
                        "mars-hub",
                        "provenance",
                        "quicksilver",
                        "saga",
                        "ux-chain",
                        "kava",
                        "starknet"
                      ]
                    },
                    "accountId": {
                      "type": "string"
                    },
                    "balances": {
                      "type": "object",
                      "properties": {
                        "tokens": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "token": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "TRC10",
                                      "TRC20",
                                      "ASA",
                                      "ERC20",
                                      "IBC",
                                      "JETTON"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "ticker": {
                                    "type": "string"
                                  },
                                  "decimals": {
                                    "type": "string"
                                  },
                                  "contractAddress": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "id",
                                  "name",
                                  "ticker",
                                  "decimals"
                                ]
                              },
                              "amount": {
                                "type": "string",
                                "description": "Current balance of this token owned by the account. The amount is expressed in the token's smallest unit (based on its decimals)."
                              }
                            },
                            "required": ["token", "amount"]
                          }
                        }
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "nextPage": {
                          "anyOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "null"
                            }
                          ],
                          "description": "Use the token from the previous response to retrieve the next page of results."
                        }
                      },
                      "required": ["nextPage"]
                    }
                  },
                  "required": ["chainId", "accountId", "balances", "pagination"]
                }
              }
            }
          }
        }
      }
    },
    "/api/{chainId}/account/{accountId}/history": {
      "get": {
        "tags": ["Account"],
        "summary": "Get Account History",
        "description": "Returns the history of a specified account identifier (address or xpub) and chain ID, primarily focusing on past transactions.",
        "parameters": [
          {
            "in": "path",
            "name": "chainId",
            "schema": {
              "type": "string",
              "enum": [
                "cosmoshub",
                "osmosis",
                "celestia",
                "dydx",
                "axelar",
                "ethereum",
                "sepolia",
                "holesky",
                "base",
                "base-sepolia",
                "optimism",
                "arbitrum",
                "polygon",
                "polygon-amoy",
                "bsc",
                "bsc-testnet",
                "linea",
                "linea-sepolia",
                "avalanche",
                "gnosis",
                "gnosis-chiado",
                "moonbeam",
                "moonriver",
                "moonbase",
                "fantom",
                "injective",
                "akash",
                "neutron",
                "evmos",
                "juno",
                "sei",
                "stride",
                "kava"
              ]
            },
            "required": true
          },
          {
            "in": "path",
            "name": "accountId",
            "description": "Account identifier (address, xpub, etc) for the specified chain ID",
            "schema": {
              "type": "string",
              "description": "Account identifier (address, xpub, etc) for the specified chain ID"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "nextPage",
            "description": "Token from the previous response of this endpoint. Provide it here to fetch the next page of results.",
            "schema": {
              "type": "string",
              "description": "Token from the previous response of this endpoint. Provide it here to fetch the next page of results."
            }
          },
          {
            "in": "query",
            "name": "include",
            "description": "Optional filter to request specific data. Use a single 'include' parameter with comma-separated values. Possible values are 'parsed' and 'raw'.",
            "schema": {
              "type": "string",
              "description": "Optional filter to request specific data. Use a single 'include' parameter with comma-separated values. Possible values are 'parsed' and 'raw'.",
              "example": "parsed,raw"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the current list of transactions for the specified address and chain ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "chainId": {
                      "type": "string",
                      "enum": [
                        "cosmoshub",
                        "osmosis",
                        "celestia",
                        "dydx",
                        "axelar",
                        "ethereum",
                        "sepolia",
                        "holesky",
                        "base",
                        "base-sepolia",
                        "optimism",
                        "arbitrum",
                        "polygon",
                        "polygon-amoy",
                        "bsc",
                        "bsc-testnet",
                        "linea",
                        "linea-sepolia",
                        "avalanche",
                        "gnosis",
                        "gnosis-chiado",
                        "moonbeam",
                        "moonriver",
                        "moonbase",
                        "fantom",
                        "injective",
                        "akash",
                        "neutron",
                        "evmos",
                        "juno",
                        "sei",
                        "stride",
                        "kava"
                      ]
                    },
                    "accountId": {
                      "type": "string"
                    },
                    "transactions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "raw": {},
                          "parsed": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "mode": {
                                "anyOf": [
                                  {
                                    "type": "string",
                                    "enum": [
                                      "deployAccount",
                                      "transfer",
                                      "transferToken",
                                      "delegate",
                                      "redelegate",
                                      "undelegate",
                                      "claimRewards"
                                    ]
                                  },
                                  {
                                    "type": "string",
                                    "const": "unknown"
                                  }
                                ]
                              },
                              "state": {
                                "type": "string",
                                "enum": [
                                  "pending",
                                  "unconfirmed",
                                  "confirmed",
                                  "failed",
                                  "unknown"
                                ]
                              },
                              "tokenId": {
                                "type": "string"
                              },
                              "blockHeight": {
                                "type": "string"
                              },
                              "timestamp": {
                                "type": "string",
                                "description": "Timestamp in milliseconds"
                              },
                              "fees": {
                                "type": "object",
                                "properties": {
                                  "amount": {
                                    "type": "string",
                                    "description": "Amount to use, either provided or computed by the API"
                                  },
                                  "ticker": {
                                    "type": "string",
                                    "description": "Specific currency for that amount. If not provided, the amount is in the native currency of the chain."
                                  }
                                },
                                "required": ["amount"]
                              },
                              "gas": {
                                "type": "string",
                                "description": "Transaction gas computed by the API, when relevant for the chain."
                              },
                              "nonce": {
                                "type": "string",
                                "description": "Transaction sequence number, when relevant for the chain."
                              },
                              "memo": {
                                "type": "string",
                                "description": "Optional free text field, that is supported for some chains."
                              },
                              "senders": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "address": {
                                      "type": "string"
                                    },
                                    "amount": {
                                      "type": "string",
                                      "description": "Amount to use, either provided or computed by the API"
                                    },
                                    "ticker": {
                                      "type": "string",
                                      "description": "Specific currency for that amount. If not provided, the amount is in the native currency of the chain."
                                    }
                                  },
                                  "required": ["address", "amount"]
                                }
                              },
                              "recipients": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "address": {
                                      "type": "string"
                                    },
                                    "amount": {
                                      "type": "string",
                                      "description": "Amount to use, either provided or computed by the API"
                                    },
                                    "ticker": {
                                      "type": "string",
                                      "description": "Specific currency for that amount. If not provided, the amount is in the native currency of the chain."
                                    }
                                  },
                                  "required": ["address", "amount"]
                                }
                              },
                              "validators": {
                                "type": "object",
                                "properties": {
                                  "source": {
                                    "type": "object",
                                    "properties": {
                                      "address": {
                                        "type": "string"
                                      },
                                      "amount": {
                                        "type": "string",
                                        "description": "Amount to use, either provided or computed by the API"
                                      },
                                      "ticker": {
                                        "type": "string",
                                        "description": "Specific currency for that amount. If not provided, the amount is in the native currency of the chain."
                                      }
                                    },
                                    "required": ["address", "amount"]
                                  },
                                  "target": {
                                    "type": "object",
                                    "properties": {
                                      "address": {
                                        "type": "string"
                                      },
                                      "amount": {
                                        "type": "string",
                                        "description": "Amount to use, either provided or computed by the API"
                                      },
                                      "ticker": {
                                        "type": "string",
                                        "description": "Specific currency for that amount. If not provided, the amount is in the native currency of the chain."
                                      }
                                    },
                                    "required": ["address", "amount"]
                                  }
                                }
                              }
                            },
                            "required": ["id", "mode", "state", "fees"]
                          }
                        }
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "nextPage": {
                          "anyOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "null"
                            }
                          ],
                          "description": "Use the token from the previous response to retrieve the next page of results."
                        }
                      },
                      "required": ["nextPage"]
                    }
                  },
                  "required": [
                    "chainId",
                    "accountId",
                    "transactions",
                    "pagination"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/{chainId}/transaction/encode": {
      "post": {
        "tags": ["Transaction"],
        "summary": "Encode a Transaction",
        "description": "Encodes transaction data into a format suitable for broadcasting. This function is pivotal for creating transactions that comply with the specific requirements of different blockchains.        It also completes the input transaction with computed data, such as fees and max spendable amount, and performs some chain-specific validation checks on the transaction.",
        "parameters": [
          {
            "in": "path",
            "name": "chainId",
            "schema": {
              "type": "string",
              "enum": [
                "algorand",
                "cosmoshub",
                "cosmoshub-testnet",
                "osmosis",
                "osmosis-testnet",
                "celestia",
                "celestia-testnet",
                "dydx",
                "axelar",
                "ethereum",
                "sepolia",
                "holesky",
                "zksync",
                "zksync-sepolia",
                "injective-evm-testnet",
                "base",
                "base-sepolia",
                "optimism",
                "optimism-sepolia",
                "arbitrum",
                "arbitrum-sepolia",
                "bitcoin",
                "monad-private-testnet",
                "bitcoin-testnet",
                "polygon",
                "polygon-amoy",
                "bsc",
                "bsc-testnet",
                "linea",
                "linea-sepolia",
                "avalanche",
                "avalanche-fuji",
                "gnosis",
                "gnosis-chiado",
                "moonbeam",
                "moonriver",
                "moonbase",
                "fantom",
                "mantle",
                "litecoin",
                "dogecoin",
                "ton",
                "chiliz",
                "chiliz-testnet",
                "injective",
                "akash",
                "band",
                "dymension",
                "kyve",
                "neutron",
                "terra2",
                "stargaze",
                "tron",
                "evmos",
                "irisnet",
                "juno",
                "lum-network",
                "omniflix",
                "sei",
                "medibloc",
                "passage",
                "quasar",
                "seda",
                "sommelier",
                "shentu",
                "stride",
                "chihuahua",
                "bitsong",
                "persistence",
                "comdex",
                "fetch-ai",
                "humans-ai",
                "ki",
                "likecoin",
                "mars-hub",
                "provenance",
                "quicksilver",
                "saga",
                "ux-chain",
                "kava",
                "starknet"
              ]
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "transaction": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "memo": {
                                "type": "string",
                                "description": "Optional free text field, that is supported for some chains."
                              },
                              "format": {
                                "type": "string",
                                "enum": ["json", "hex"],
                                "description": "Controls the format of the returned encoded transaction. DEPRECATED, will be reworked at some point."
                              }
                            }
                          },
                          {
                            "oneOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "mode": {
                                    "type": "string",
                                    "const": "deployAccount"
                                  },
                                  "senderPubKey": {
                                    "type": "string",
                                    "description": "Public key of the sender account, required in some situations. It is advised to provide it by default if you can."
                                  },
                                  "contractType": {
                                    "type": "string",
                                    "enum": ["argentx"],
                                    "description": "Provider of the account contract. Only ArgentX is supported at the moment.",
                                    "default": "argentx"
                                  }
                                },
                                "required": ["mode", "senderPubKey"],
                                "title": "Deploy Account",
                                "description": "Deploy a smart contract wallet account"
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "mode": {
                                    "type": "string",
                                    "const": "transfer"
                                  },
                                  "senderAddress": {
                                    "type": "string",
                                    "description": "Address of the sender account."
                                  },
                                  "senderPubKey": {
                                    "type": "string",
                                    "description": "Public key of the sender account, required in some situations. It is advised to provide it by default if you can."
                                  },
                                  "recipientAddress": {
                                    "type": "string",
                                    "description": "Address of the recipient account."
                                  },
                                  "amount": {
                                    "type": "string",
                                    "description": "Optional amount to use (always in smallest unit). Use either this or useMaxAmount."
                                  },
                                  "useMaxAmount": {
                                    "type": "boolean",
                                    "description": "Option to let the API compute the amount to use all available funds. Either use this or provide amount.",
                                    "default": false
                                  }
                                },
                                "required": [
                                  "mode",
                                  "senderAddress",
                                  "recipientAddress"
                                ],
                                "title": "Transfer",
                                "description": "Transfer chain native coins"
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "mode": {
                                    "type": "string",
                                    "const": "delegate"
                                  },
                                  "senderAddress": {
                                    "type": "string",
                                    "description": "Address of the sender account."
                                  },
                                  "senderPubKey": {
                                    "type": "string",
                                    "description": "Public key of the sender account, required in some situations. It is advised to provide it by default if you can."
                                  },
                                  "validatorAddress": {
                                    "type": "string",
                                    "description": "Address or ID of a validator"
                                  },
                                  "amount": {
                                    "type": "string",
                                    "description": "Optional amount to use (always in smallest unit). Use either this or useMaxAmount."
                                  },
                                  "useMaxAmount": {
                                    "type": "boolean",
                                    "description": "Option to let the API compute the amount to use all available funds. Either use this or provide amount.",
                                    "default": false
                                  }
                                },
                                "required": [
                                  "mode",
                                  "senderAddress",
                                  "validatorAddress"
                                ],
                                "title": "Delegate",
                                "description": "Put some funds at stake"
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "mode": {
                                    "type": "string",
                                    "const": "transferToken"
                                  },
                                  "tokenId": {
                                    "type": "string",
                                    "description": "Unique ID of the token to transfer (e.g contract address for EVM chains)"
                                  },
                                  "senderAddress": {
                                    "type": "string",
                                    "description": "Address of the sender account."
                                  },
                                  "senderPubKey": {
                                    "type": "string",
                                    "description": "Public key of the sender account, required in some situations. It is advised to provide it by default if you can."
                                  },
                                  "recipientAddress": {
                                    "type": "string",
                                    "description": "Address of the recipient account."
                                  },
                                  "amount": {
                                    "type": "string",
                                    "description": "Optional amount to use (always in smallest unit). Use either this or useMaxAmount."
                                  },
                                  "useMaxAmount": {
                                    "type": "boolean",
                                    "description": "Option to let the API compute the amount to use all available funds. Either use this or provide amount.",
                                    "default": false
                                  }
                                },
                                "required": [
                                  "mode",
                                  "tokenId",
                                  "senderAddress",
                                  "recipientAddress"
                                ],
                                "title": "TransferToken",
                                "description": "Transfer chain tokens"
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "mode": {
                                    "type": "string",
                                    "const": "undelegate"
                                  },
                                  "senderAddress": {
                                    "type": "string",
                                    "description": "Address of the sender account."
                                  },
                                  "senderPubKey": {
                                    "type": "string",
                                    "description": "Public key of the sender account, required in some situations. It is advised to provide it by default if you can."
                                  },
                                  "validatorAddress": {
                                    "type": "string",
                                    "description": "Address or ID of a validator"
                                  },
                                  "amount": {
                                    "type": "string",
                                    "description": "Optional amount to use (always in smallest unit). Use either this or useMaxAmount."
                                  },
                                  "useMaxAmount": {
                                    "type": "boolean",
                                    "description": "Option to let the API compute the amount to use all available funds. Either use this or provide amount.",
                                    "default": false
                                  }
                                },
                                "required": [
                                  "mode",
                                  "senderAddress",
                                  "validatorAddress"
                                ],
                                "title": "Undelegate",
                                "description": "Stop staking some funds"
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "mode": {
                                    "type": "string",
                                    "const": "redelegate"
                                  },
                                  "senderAddress": {
                                    "type": "string",
                                    "description": "Address of the sender account."
                                  },
                                  "senderPubKey": {
                                    "type": "string",
                                    "description": "Public key of the sender account, required in some situations. It is advised to provide it by default if you can."
                                  },
                                  "sourceValidatorAddress": {
                                    "type": "string",
                                    "description": "Address or ID of a validator"
                                  },
                                  "targetValidatorAddress": {
                                    "type": "string",
                                    "description": "Address or ID of a validator"
                                  },
                                  "amount": {
                                    "type": "string",
                                    "description": "Optional amount to use (always in smallest unit). Use either this or useMaxAmount."
                                  },
                                  "useMaxAmount": {
                                    "type": "boolean",
                                    "description": "Option to let the API compute the amount to use all available funds. Either use this or provide amount.",
                                    "default": false
                                  }
                                },
                                "required": [
                                  "mode",
                                  "senderAddress",
                                  "sourceValidatorAddress",
                                  "targetValidatorAddress"
                                ],
                                "title": "Redelegate",
                                "description": "Assign some staked funds to a different validator"
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "mode": {
                                    "type": "string",
                                    "const": "claimRewards"
                                  },
                                  "senderAddress": {
                                    "type": "string",
                                    "description": "Address of the sender account."
                                  },
                                  "senderPubKey": {
                                    "type": "string",
                                    "description": "Public key of the sender account, required in some situations. It is advised to provide it by default if you can."
                                  },
                                  "validatorAddress": {
                                    "type": "string",
                                    "description": "Address or ID of a validator"
                                  },
                                  "compound": {
                                    "type": "boolean",
                                    "description": "When available for the chain, controls whether staking rewards are cashed or added to the staked funds.",
                                    "default": false
                                  }
                                },
                                "required": [
                                  "mode",
                                  "senderAddress",
                                  "validatorAddress"
                                ],
                                "title": "ClaimRewards",
                                "description": "Retrieve rewards from staking"
                              }
                            ]
                          }
                        ]
                      }
                    },
                    "required": ["data"]
                  }
                },
                "required": ["transaction"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the transaction data encoded into a blockchain-specific format, ready for broadcasting.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "chainId": {
                      "type": "string",
                      "enum": [
                        "algorand",
                        "cosmoshub",
                        "cosmoshub-testnet",
                        "osmosis",
                        "osmosis-testnet",
                        "celestia",
                        "celestia-testnet",
                        "dydx",
                        "axelar",
                        "ethereum",
                        "sepolia",
                        "holesky",
                        "zksync",
                        "zksync-sepolia",
                        "injective-evm-testnet",
                        "base",
                        "base-sepolia",
                        "optimism",
                        "optimism-sepolia",
                        "arbitrum",
                        "arbitrum-sepolia",
                        "bitcoin",
                        "monad-private-testnet",
                        "bitcoin-testnet",
                        "polygon",
                        "polygon-amoy",
                        "bsc",
                        "bsc-testnet",
                        "linea",
                        "linea-sepolia",
                        "avalanche",
                        "avalanche-fuji",
                        "gnosis",
                        "gnosis-chiado",
                        "moonbeam",
                        "moonriver",
                        "moonbase",
                        "fantom",
                        "mantle",
                        "litecoin",
                        "dogecoin",
                        "ton",
                        "chiliz",
                        "chiliz-testnet",
                        "injective",
                        "akash",
                        "band",
                        "dymension",
                        "kyve",
                        "neutron",
                        "terra2",
                        "stargaze",
                        "tron",
                        "evmos",
                        "irisnet",
                        "juno",
                        "lum-network",
                        "omniflix",
                        "sei",
                        "medibloc",
                        "passage",
                        "quasar",
                        "seda",
                        "sommelier",
                        "shentu",
                        "stride",
                        "chihuahua",
                        "bitsong",
                        "persistence",
                        "comdex",
                        "fetch-ai",
                        "humans-ai",
                        "ki",
                        "likecoin",
                        "mars-hub",
                        "provenance",
                        "quicksilver",
                        "saga",
                        "ux-chain",
                        "kava",
                        "starknet"
                      ]
                    },
                    "transaction": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "fees": {
                                  "type": "string",
                                  "description": "Transaction fees computed by the API."
                                },
                                "gas": {
                                  "type": "string",
                                  "description": "Transaction gas computed by the API, when relevant for the chain."
                                },
                                "nonce": {
                                  "type": "string",
                                  "description": "Transaction sequence number, when relevant for the chain."
                                },
                                "memo": {
                                  "type": "string",
                                  "description": "Optional free text field, that is supported for some chains."
                                },
                                "format": {
                                  "type": "string",
                                  "enum": ["json", "hex"],
                                  "description": "Controls the format of the returned encoded transaction. DEPRECATED, will be reworked at some point."
                                },
                                "params": {
                                  "description": "Some additional chain-specific context computed by the API. If provided by the encode endpoint, it must be provided back to the broadcast endpoint."
                                }
                              },
                              "required": ["fees"]
                            },
                            {
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "mode": {
                                      "type": "string",
                                      "const": "deployAccount"
                                    },
                                    "senderPubKey": {
                                      "type": "string",
                                      "description": "Public key of the sender account, required in some situations. It is advised to provide it by default if you can."
                                    },
                                    "contractType": {
                                      "type": "string",
                                      "enum": ["argentx"],
                                      "description": "Provider of the account contract. Only ArgentX is supported at the moment."
                                    }
                                  },
                                  "required": [
                                    "mode",
                                    "senderPubKey",
                                    "contractType"
                                  ],
                                  "title": "Deploy Account",
                                  "description": "Deploy a smart contract wallet account"
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "mode": {
                                      "type": "string",
                                      "const": "transfer"
                                    },
                                    "senderAddress": {
                                      "type": "string",
                                      "description": "Address of the sender account."
                                    },
                                    "senderPubKey": {
                                      "type": "string",
                                      "description": "Public key of the sender account, required in some situations. It is advised to provide it by default if you can."
                                    },
                                    "recipientAddress": {
                                      "type": "string",
                                      "description": "Address of the recipient account."
                                    },
                                    "amount": {
                                      "type": "string",
                                      "description": "Amount to use, either provided or computed by the API"
                                    },
                                    "useMaxAmount": {
                                      "type": "boolean",
                                      "description": "Option to let the API compute the amount to use all available funds. Either use this or provide amount."
                                    }
                                  },
                                  "required": [
                                    "mode",
                                    "senderAddress",
                                    "recipientAddress",
                                    "amount",
                                    "useMaxAmount"
                                  ],
                                  "title": "Transfer",
                                  "description": "Transfer chain native coins"
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "mode": {
                                      "type": "string",
                                      "const": "transferToken"
                                    },
                                    "tokenId": {
                                      "type": "string",
                                      "description": "Unique ID of the token to transfer (e.g contract address for EVM chains)"
                                    },
                                    "senderAddress": {
                                      "type": "string",
                                      "description": "Address of the sender account."
                                    },
                                    "senderPubKey": {
                                      "type": "string",
                                      "description": "Public key of the sender account, required in some situations. It is advised to provide it by default if you can."
                                    },
                                    "recipientAddress": {
                                      "type": "string",
                                      "description": "Address of the recipient account."
                                    },
                                    "amount": {
                                      "type": "string",
                                      "description": "Amount to use, either provided or computed by the API"
                                    },
                                    "useMaxAmount": {
                                      "type": "boolean",
                                      "description": "Option to let the API compute the amount to use all available funds. Either use this or provide amount."
                                    }
                                  },
                                  "required": [
                                    "mode",
                                    "tokenId",
                                    "senderAddress",
                                    "recipientAddress",
                                    "amount",
                                    "useMaxAmount"
                                  ],
                                  "title": "TransferToken",
                                  "description": "Transfer chain tokens"
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "mode": {
                                      "type": "string",
                                      "const": "delegate"
                                    },
                                    "senderAddress": {
                                      "type": "string",
                                      "description": "Address of the sender account."
                                    },
                                    "senderPubKey": {
                                      "type": "string",
                                      "description": "Public key of the sender account, required in some situations. It is advised to provide it by default if you can."
                                    },
                                    "validatorAddress": {
                                      "type": "string",
                                      "description": "Address or ID of a validator"
                                    },
                                    "amount": {
                                      "type": "string",
                                      "description": "Amount to use, either provided or computed by the API"
                                    },
                                    "useMaxAmount": {
                                      "type": "boolean",
                                      "description": "Option to let the API compute the amount to use all available funds. Either use this or provide amount."
                                    }
                                  },
                                  "required": [
                                    "mode",
                                    "senderAddress",
                                    "validatorAddress",
                                    "amount",
                                    "useMaxAmount"
                                  ],
                                  "title": "Delegate",
                                  "description": "Put some funds at stake"
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "mode": {
                                      "type": "string",
                                      "const": "undelegate"
                                    },
                                    "senderAddress": {
                                      "type": "string",
                                      "description": "Address of the sender account."
                                    },
                                    "senderPubKey": {
                                      "type": "string",
                                      "description": "Public key of the sender account, required in some situations. It is advised to provide it by default if you can."
                                    },
                                    "validatorAddress": {
                                      "type": "string",
                                      "description": "Address or ID of a validator"
                                    },
                                    "amount": {
                                      "type": "string",
                                      "description": "Amount to use, either provided or computed by the API"
                                    },
                                    "useMaxAmount": {
                                      "type": "boolean",
                                      "description": "Option to let the API compute the amount to use all available funds. Either use this or provide amount."
                                    }
                                  },
                                  "required": [
                                    "mode",
                                    "senderAddress",
                                    "validatorAddress",
                                    "amount",
                                    "useMaxAmount"
                                  ],
                                  "title": "Undelegate",
                                  "description": "Stop staking some funds"
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "mode": {
                                      "type": "string",
                                      "const": "redelegate"
                                    },
                                    "senderAddress": {
                                      "type": "string",
                                      "description": "Address of the sender account."
                                    },
                                    "senderPubKey": {
                                      "type": "string",
                                      "description": "Public key of the sender account, required in some situations. It is advised to provide it by default if you can."
                                    },
                                    "sourceValidatorAddress": {
                                      "type": "string",
                                      "description": "Address or ID of a validator"
                                    },
                                    "targetValidatorAddress": {
                                      "type": "string",
                                      "description": "Address or ID of a validator"
                                    },
                                    "amount": {
                                      "type": "string",
                                      "description": "Amount to use, either provided or computed by the API"
                                    },
                                    "useMaxAmount": {
                                      "type": "boolean",
                                      "description": "Option to let the API compute the amount to use all available funds. Either use this or provide amount."
                                    }
                                  },
                                  "required": [
                                    "mode",
                                    "senderAddress",
                                    "sourceValidatorAddress",
                                    "targetValidatorAddress",
                                    "amount",
                                    "useMaxAmount"
                                  ],
                                  "title": "Redelegate",
                                  "description": "Assign some staked funds to a different validator"
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "mode": {
                                      "type": "string",
                                      "const": "claimRewards"
                                    },
                                    "senderAddress": {
                                      "type": "string",
                                      "description": "Address of the sender account."
                                    },
                                    "senderPubKey": {
                                      "type": "string",
                                      "description": "Public key of the sender account, required in some situations. It is advised to provide it by default if you can."
                                    },
                                    "validatorAddress": {
                                      "type": "string",
                                      "description": "Address or ID of a validator"
                                    },
                                    "compound": {
                                      "type": "boolean",
                                      "description": "When available for the chain, controls whether staking rewards are cashed or added to the staked funds."
                                    }
                                  },
                                  "required": [
                                    "mode",
                                    "senderAddress",
                                    "validatorAddress",
                                    "compound"
                                  ],
                                  "title": "ClaimRewards",
                                  "description": "Retrieve rewards from staking"
                                }
                              ]
                            }
                          ]
                        },
                        "encoded": {
                          "type": "string"
                        }
                      },
                      "required": ["data", "encoded"]
                    },
                    "status": {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": ["message"]
                          }
                        },
                        "warnings": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": ["message"]
                          }
                        }
                      },
                      "required": ["errors", "warnings"]
                    }
                  },
                  "required": ["chainId", "transaction", "status"]
                }
              }
            }
          }
        }
      }
    },
    "/api/{chainId}/transaction/validate": {
      "post": {
        "tags": ["Transaction"],
        "summary": "Validate Transaction",
        "description": "Validates a transaction's format and checks it against the blockchain's current state for potential errors or warnings. This pre-validation is critical for ensuring transaction success rates and for debugging transaction issues.",
        "parameters": [
          {
            "in": "path",
            "name": "chainId",
            "schema": {
              "type": "string",
              "enum": [
                "algorand",
                "cosmoshub",
                "cosmoshub-testnet",
                "osmosis",
                "osmosis-testnet",
                "celestia",
                "celestia-testnet",
                "dydx",
                "axelar",
                "ethereum",
                "sepolia",
                "holesky",
                "zksync",
                "zksync-sepolia",
                "injective-evm-testnet",
                "base",
                "base-sepolia",
                "optimism",
                "optimism-sepolia",
                "arbitrum",
                "arbitrum-sepolia",
                "bitcoin",
                "monad-private-testnet",
                "bitcoin-testnet",
                "polygon",
                "polygon-amoy",
                "bsc",
                "bsc-testnet",
                "linea",
                "linea-sepolia",
                "avalanche",
                "avalanche-fuji",
                "gnosis",
                "gnosis-chiado",
                "moonbeam",
                "moonriver",
                "moonbase",
                "fantom",
                "mantle",
                "litecoin",
                "dogecoin",
                "ton",
                "chiliz",
                "chiliz-testnet",
                "injective",
                "akash",
                "band",
                "dymension",
                "kyve",
                "neutron",
                "terra2",
                "stargaze",
                "tron",
                "evmos",
                "irisnet",
                "juno",
                "lum-network",
                "omniflix",
                "sei",
                "medibloc",
                "passage",
                "quasar",
                "seda",
                "sommelier",
                "shentu",
                "stride",
                "chihuahua",
                "bitsong",
                "persistence",
                "comdex",
                "fetch-ai",
                "humans-ai",
                "ki",
                "likecoin",
                "mars-hub",
                "provenance",
                "quicksilver",
                "saga",
                "ux-chain",
                "kava",
                "starknet"
              ]
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "transaction": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "memo": {
                                "type": "string",
                                "description": "Optional free text field, that is supported for some chains."
                              },
                              "format": {
                                "type": "string",
                                "enum": ["json", "hex"],
                                "description": "Controls the format of the returned encoded transaction. DEPRECATED, will be reworked at some point."
                              }
                            }
                          },
                          {
                            "oneOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "mode": {
                                    "type": "string",
                                    "const": "deployAccount"
                                  },
                                  "senderPubKey": {
                                    "type": "string",
                                    "description": "Public key of the sender account, required in some situations. It is advised to provide it by default if you can."
                                  },
                                  "contractType": {
                                    "type": "string",
                                    "enum": ["argentx"],
                                    "description": "Provider of the account contract. Only ArgentX is supported at the moment.",
                                    "default": "argentx"
                                  }
                                },
                                "required": ["mode", "senderPubKey"],
                                "title": "Deploy Account",
                                "description": "Deploy a smart contract wallet account"
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "mode": {
                                    "type": "string",
                                    "const": "transfer"
                                  },
                                  "senderAddress": {
                                    "type": "string",
                                    "description": "Address of the sender account."
                                  },
                                  "senderPubKey": {
                                    "type": "string",
                                    "description": "Public key of the sender account, required in some situations. It is advised to provide it by default if you can."
                                  },
                                  "recipientAddress": {
                                    "type": "string",
                                    "description": "Address of the recipient account."
                                  },
                                  "amount": {
                                    "type": "string",
                                    "description": "Optional amount to use (always in smallest unit). Use either this or useMaxAmount."
                                  },
                                  "useMaxAmount": {
                                    "type": "boolean",
                                    "description": "Option to let the API compute the amount to use all available funds. Either use this or provide amount.",
                                    "default": false
                                  }
                                },
                                "required": [
                                  "mode",
                                  "senderAddress",
                                  "recipientAddress"
                                ],
                                "title": "Transfer",
                                "description": "Transfer chain native coins"
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "mode": {
                                    "type": "string",
                                    "const": "delegate"
                                  },
                                  "senderAddress": {
                                    "type": "string",
                                    "description": "Address of the sender account."
                                  },
                                  "senderPubKey": {
                                    "type": "string",
                                    "description": "Public key of the sender account, required in some situations. It is advised to provide it by default if you can."
                                  },
                                  "validatorAddress": {
                                    "type": "string",
                                    "description": "Address or ID of a validator"
                                  },
                                  "amount": {
                                    "type": "string",
                                    "description": "Optional amount to use (always in smallest unit). Use either this or useMaxAmount."
                                  },
                                  "useMaxAmount": {
                                    "type": "boolean",
                                    "description": "Option to let the API compute the amount to use all available funds. Either use this or provide amount.",
                                    "default": false
                                  }
                                },
                                "required": [
                                  "mode",
                                  "senderAddress",
                                  "validatorAddress"
                                ],
                                "title": "Delegate",
                                "description": "Put some funds at stake"
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "mode": {
                                    "type": "string",
                                    "const": "transferToken"
                                  },
                                  "tokenId": {
                                    "type": "string",
                                    "description": "Unique ID of the token to transfer (e.g contract address for EVM chains)"
                                  },
                                  "senderAddress": {
                                    "type": "string",
                                    "description": "Address of the sender account."
                                  },
                                  "senderPubKey": {
                                    "type": "string",
                                    "description": "Public key of the sender account, required in some situations. It is advised to provide it by default if you can."
                                  },
                                  "recipientAddress": {
                                    "type": "string",
                                    "description": "Address of the recipient account."
                                  },
                                  "amount": {
                                    "type": "string",
                                    "description": "Optional amount to use (always in smallest unit). Use either this or useMaxAmount."
                                  },
                                  "useMaxAmount": {
                                    "type": "boolean",
                                    "description": "Option to let the API compute the amount to use all available funds. Either use this or provide amount.",
                                    "default": false
                                  }
                                },
                                "required": [
                                  "mode",
                                  "tokenId",
                                  "senderAddress",
                                  "recipientAddress"
                                ],
                                "title": "TransferToken",
                                "description": "Transfer chain tokens"
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "mode": {
                                    "type": "string",
                                    "const": "undelegate"
                                  },
                                  "senderAddress": {
                                    "type": "string",
                                    "description": "Address of the sender account."
                                  },
                                  "senderPubKey": {
                                    "type": "string",
                                    "description": "Public key of the sender account, required in some situations. It is advised to provide it by default if you can."
                                  },
                                  "validatorAddress": {
                                    "type": "string",
                                    "description": "Address or ID of a validator"
                                  },
                                  "amount": {
                                    "type": "string",
                                    "description": "Optional amount to use (always in smallest unit). Use either this or useMaxAmount."
                                  },
                                  "useMaxAmount": {
                                    "type": "boolean",
                                    "description": "Option to let the API compute the amount to use all available funds. Either use this or provide amount.",
                                    "default": false
                                  }
                                },
                                "required": [
                                  "mode",
                                  "senderAddress",
                                  "validatorAddress"
                                ],
                                "title": "Undelegate",
                                "description": "Stop staking some funds"
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "mode": {
                                    "type": "string",
                                    "const": "redelegate"
                                  },
                                  "senderAddress": {
                                    "type": "string",
                                    "description": "Address of the sender account."
                                  },
                                  "senderPubKey": {
                                    "type": "string",
                                    "description": "Public key of the sender account, required in some situations. It is advised to provide it by default if you can."
                                  },
                                  "sourceValidatorAddress": {
                                    "type": "string",
                                    "description": "Address or ID of a validator"
                                  },
                                  "targetValidatorAddress": {
                                    "type": "string",
                                    "description": "Address or ID of a validator"
                                  },
                                  "amount": {
                                    "type": "string",
                                    "description": "Optional amount to use (always in smallest unit). Use either this or useMaxAmount."
                                  },
                                  "useMaxAmount": {
                                    "type": "boolean",
                                    "description": "Option to let the API compute the amount to use all available funds. Either use this or provide amount.",
                                    "default": false
                                  }
                                },
                                "required": [
                                  "mode",
                                  "senderAddress",
                                  "sourceValidatorAddress",
                                  "targetValidatorAddress"
                                ],
                                "title": "Redelegate",
                                "description": "Assign some staked funds to a different validator"
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "mode": {
                                    "type": "string",
                                    "const": "claimRewards"
                                  },
                                  "senderAddress": {
                                    "type": "string",
                                    "description": "Address of the sender account."
                                  },
                                  "senderPubKey": {
                                    "type": "string",
                                    "description": "Public key of the sender account, required in some situations. It is advised to provide it by default if you can."
                                  },
                                  "validatorAddress": {
                                    "type": "string",
                                    "description": "Address or ID of a validator"
                                  },
                                  "compound": {
                                    "type": "boolean",
                                    "description": "When available for the chain, controls whether staking rewards are cashed or added to the staked funds.",
                                    "default": false
                                  }
                                },
                                "required": [
                                  "mode",
                                  "senderAddress",
                                  "validatorAddress"
                                ],
                                "title": "ClaimRewards",
                                "description": "Retrieve rewards from staking"
                              }
                            ]
                          }
                        ]
                      }
                    },
                    "required": ["data"]
                  }
                },
                "required": ["transaction"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Provides validation results, including any errors or warnings related to the transaction.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "chainId": {
                      "type": "string",
                      "enum": [
                        "algorand",
                        "cosmoshub",
                        "cosmoshub-testnet",
                        "osmosis",
                        "osmosis-testnet",
                        "celestia",
                        "celestia-testnet",
                        "dydx",
                        "axelar",
                        "ethereum",
                        "sepolia",
                        "holesky",
                        "zksync",
                        "zksync-sepolia",
                        "injective-evm-testnet",
                        "base",
                        "base-sepolia",
                        "optimism",
                        "optimism-sepolia",
                        "arbitrum",
                        "arbitrum-sepolia",
                        "bitcoin",
                        "monad-private-testnet",
                        "bitcoin-testnet",
                        "polygon",
                        "polygon-amoy",
                        "bsc",
                        "bsc-testnet",
                        "linea",
                        "linea-sepolia",
                        "avalanche",
                        "avalanche-fuji",
                        "gnosis",
                        "gnosis-chiado",
                        "moonbeam",
                        "moonriver",
                        "moonbase",
                        "fantom",
                        "mantle",
                        "litecoin",
                        "dogecoin",
                        "ton",
                        "chiliz",
                        "chiliz-testnet",
                        "injective",
                        "akash",
                        "band",
                        "dymension",
                        "kyve",
                        "neutron",
                        "terra2",
                        "stargaze",
                        "tron",
                        "evmos",
                        "irisnet",
                        "juno",
                        "lum-network",
                        "omniflix",
                        "sei",
                        "medibloc",
                        "passage",
                        "quasar",
                        "seda",
                        "sommelier",
                        "shentu",
                        "stride",
                        "chihuahua",
                        "bitsong",
                        "persistence",
                        "comdex",
                        "fetch-ai",
                        "humans-ai",
                        "ki",
                        "likecoin",
                        "mars-hub",
                        "provenance",
                        "quicksilver",
                        "saga",
                        "ux-chain",
                        "kava",
                        "starknet"
                      ]
                    },
                    "status": {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": ["message"]
                          }
                        },
                        "warnings": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": ["message"]
                          }
                        }
                      },
                      "required": ["errors", "warnings"]
                    }
                  },
                  "required": ["chainId", "status"]
                }
              }
            }
          }
        }
      }
    },
    "/api/{chainId}/transaction/broadcast": {
      "post": {
        "tags": ["Transaction"],
        "summary": "Broadcast Transaction",
        "description": "Broadcasts a signed transaction to the blockchain, crucial for submitting transactions like transfers, delegations, or reward claims. Returns a transaction receipt (hash) or error details.\n\n\nNote: the exact same 'data' and 'encoded' fields that were retrieved with the /transaction/encode endpoint, must be provided here.",
        "parameters": [
          {
            "in": "path",
            "name": "chainId",
            "schema": {
              "type": "string",
              "enum": [
                "algorand",
                "cosmoshub",
                "cosmoshub-testnet",
                "osmosis",
                "osmosis-testnet",
                "celestia",
                "celestia-testnet",
                "dydx",
                "axelar",
                "ethereum",
                "sepolia",
                "holesky",
                "zksync",
                "zksync-sepolia",
                "injective-evm-testnet",
                "base",
                "base-sepolia",
                "optimism",
                "optimism-sepolia",
                "arbitrum",
                "arbitrum-sepolia",
                "bitcoin",
                "monad-private-testnet",
                "bitcoin-testnet",
                "polygon",
                "polygon-amoy",
                "bsc",
                "bsc-testnet",
                "linea",
                "linea-sepolia",
                "avalanche",
                "avalanche-fuji",
                "gnosis",
                "gnosis-chiado",
                "moonbeam",
                "moonriver",
                "moonbase",
                "fantom",
                "mantle",
                "litecoin",
                "dogecoin",
                "ton",
                "chiliz",
                "chiliz-testnet",
                "injective",
                "akash",
                "band",
                "dymension",
                "kyve",
                "neutron",
                "terra2",
                "stargaze",
                "tron",
                "evmos",
                "irisnet",
                "juno",
                "lum-network",
                "omniflix",
                "sei",
                "medibloc",
                "passage",
                "quasar",
                "seda",
                "sommelier",
                "shentu",
                "stride",
                "chihuahua",
                "bitsong",
                "persistence",
                "comdex",
                "fetch-ai",
                "humans-ai",
                "ki",
                "likecoin",
                "mars-hub",
                "provenance",
                "quicksilver",
                "saga",
                "ux-chain",
                "kava",
                "starknet"
              ]
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "transaction": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "fees": {
                                "type": "string",
                                "description": "Transaction fees."
                              },
                              "gas": {
                                "type": "string",
                                "description": "Transaction gas, when relevant for the chain."
                              },
                              "nonce": {
                                "type": "string",
                                "description": "Transaction sequence number computed by the API, when relevant for the chain."
                              },
                              "memo": {
                                "type": "string",
                                "description": "Optional free text field, that is supported for some chains."
                              },
                              "format": {
                                "type": "string",
                                "enum": ["json", "hex"],
                                "description": "Controls the format of the returned encoded transaction. DEPRECATED, will be reworked at some point."
                              },
                              "params": {
                                "description": "Some additional chain-specific context computed by the API. If provided by the encode endpoint, it must be provided back to the broadcast endpoint."
                              }
                            },
                            "required": ["fees"]
                          },
                          {
                            "oneOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "mode": {
                                    "type": "string",
                                    "const": "deployAccount"
                                  },
                                  "senderPubKey": {
                                    "type": "string",
                                    "description": "Public key of the sender account, required in some situations. It is advised to provide it by default if you can."
                                  },
                                  "contractType": {
                                    "type": "string",
                                    "enum": ["argentx"],
                                    "description": "Provider of the account contract. Only ArgentX is supported at the moment.",
                                    "default": "argentx"
                                  }
                                },
                                "required": ["mode", "senderPubKey"],
                                "title": "Deploy Account",
                                "description": "Deploy a smart contract wallet account"
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "mode": {
                                    "type": "string",
                                    "const": "transfer"
                                  },
                                  "senderAddress": {
                                    "type": "string",
                                    "description": "Address of the sender account."
                                  },
                                  "senderPubKey": {
                                    "type": "string",
                                    "description": "Public key of the sender account, required in some situations. It is advised to provide it by default if you can."
                                  },
                                  "recipientAddress": {
                                    "type": "string",
                                    "description": "Address of the recipient account."
                                  },
                                  "amount": {
                                    "type": "string",
                                    "description": "Optional amount to use (always in smallest unit). Use either this or useMaxAmount."
                                  },
                                  "useMaxAmount": {
                                    "type": "boolean",
                                    "description": "Option to let the API compute the amount to use all available funds. Either use this or provide amount.",
                                    "default": false
                                  }
                                },
                                "required": [
                                  "mode",
                                  "senderAddress",
                                  "recipientAddress"
                                ],
                                "title": "Transfer",
                                "description": "Transfer chain native coins"
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "mode": {
                                    "type": "string",
                                    "const": "delegate"
                                  },
                                  "senderAddress": {
                                    "type": "string",
                                    "description": "Address of the sender account."
                                  },
                                  "senderPubKey": {
                                    "type": "string",
                                    "description": "Public key of the sender account, required in some situations. It is advised to provide it by default if you can."
                                  },
                                  "validatorAddress": {
                                    "type": "string",
                                    "description": "Address or ID of a validator"
                                  },
                                  "amount": {
                                    "type": "string",
                                    "description": "Optional amount to use (always in smallest unit). Use either this or useMaxAmount."
                                  },
                                  "useMaxAmount": {
                                    "type": "boolean",
                                    "description": "Option to let the API compute the amount to use all available funds. Either use this or provide amount.",
                                    "default": false
                                  }
                                },
                                "required": [
                                  "mode",
                                  "senderAddress",
                                  "validatorAddress"
                                ],
                                "title": "Delegate",
                                "description": "Put some funds at stake"
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "mode": {
                                    "type": "string",
                                    "const": "transferToken"
                                  },
                                  "tokenId": {
                                    "type": "string",
                                    "description": "Unique ID of the token to transfer (e.g contract address for EVM chains)"
                                  },
                                  "senderAddress": {
                                    "type": "string",
                                    "description": "Address of the sender account."
                                  },
                                  "senderPubKey": {
                                    "type": "string",
                                    "description": "Public key of the sender account, required in some situations. It is advised to provide it by default if you can."
                                  },
                                  "recipientAddress": {
                                    "type": "string",
                                    "description": "Address of the recipient account."
                                  },
                                  "amount": {
                                    "type": "string",
                                    "description": "Optional amount to use (always in smallest unit). Use either this or useMaxAmount."
                                  },
                                  "useMaxAmount": {
                                    "type": "boolean",
                                    "description": "Option to let the API compute the amount to use all available funds. Either use this or provide amount.",
                                    "default": false
                                  }
                                },
                                "required": [
                                  "mode",
                                  "tokenId",
                                  "senderAddress",
                                  "recipientAddress"
                                ],
                                "title": "TransferToken",
                                "description": "Transfer chain tokens"
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "mode": {
                                    "type": "string",
                                    "const": "undelegate"
                                  },
                                  "senderAddress": {
                                    "type": "string",
                                    "description": "Address of the sender account."
                                  },
                                  "senderPubKey": {
                                    "type": "string",
                                    "description": "Public key of the sender account, required in some situations. It is advised to provide it by default if you can."
                                  },
                                  "validatorAddress": {
                                    "type": "string",
                                    "description": "Address or ID of a validator"
                                  },
                                  "amount": {
                                    "type": "string",
                                    "description": "Optional amount to use (always in smallest unit). Use either this or useMaxAmount."
                                  },
                                  "useMaxAmount": {
                                    "type": "boolean",
                                    "description": "Option to let the API compute the amount to use all available funds. Either use this or provide amount.",
                                    "default": false
                                  }
                                },
                                "required": [
                                  "mode",
                                  "senderAddress",
                                  "validatorAddress"
                                ],
                                "title": "Undelegate",
                                "description": "Stop staking some funds"
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "mode": {
                                    "type": "string",
                                    "const": "redelegate"
                                  },
                                  "senderAddress": {
                                    "type": "string",
                                    "description": "Address of the sender account."
                                  },
                                  "senderPubKey": {
                                    "type": "string",
                                    "description": "Public key of the sender account, required in some situations. It is advised to provide it by default if you can."
                                  },
                                  "sourceValidatorAddress": {
                                    "type": "string",
                                    "description": "Address or ID of a validator"
                                  },
                                  "targetValidatorAddress": {
                                    "type": "string",
                                    "description": "Address or ID of a validator"
                                  },
                                  "amount": {
                                    "type": "string",
                                    "description": "Optional amount to use (always in smallest unit). Use either this or useMaxAmount."
                                  },
                                  "useMaxAmount": {
                                    "type": "boolean",
                                    "description": "Option to let the API compute the amount to use all available funds. Either use this or provide amount.",
                                    "default": false
                                  }
                                },
                                "required": [
                                  "mode",
                                  "senderAddress",
                                  "sourceValidatorAddress",
                                  "targetValidatorAddress"
                                ],
                                "title": "Redelegate",
                                "description": "Assign some staked funds to a different validator"
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "mode": {
                                    "type": "string",
                                    "const": "claimRewards"
                                  },
                                  "senderAddress": {
                                    "type": "string",
                                    "description": "Address of the sender account."
                                  },
                                  "senderPubKey": {
                                    "type": "string",
                                    "description": "Public key of the sender account, required in some situations. It is advised to provide it by default if you can."
                                  },
                                  "validatorAddress": {
                                    "type": "string",
                                    "description": "Address or ID of a validator"
                                  },
                                  "compound": {
                                    "type": "boolean",
                                    "description": "When available for the chain, controls whether staking rewards are cashed or added to the staked funds.",
                                    "default": false
                                  }
                                },
                                "required": [
                                  "mode",
                                  "senderAddress",
                                  "validatorAddress"
                                ],
                                "title": "ClaimRewards",
                                "description": "Retrieve rewards from staking"
                              }
                            ]
                          }
                        ]
                      },
                      "encoded": {
                        "type": "string"
                      },
                      "signature": {
                        "type": "string"
                      }
                    },
                    "required": ["data", "encoded", "signature"]
                  }
                },
                "required": ["transaction"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns a transaction receipt or error details if the transaction fails.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "chainId": {
                      "type": "string",
                      "enum": [
                        "algorand",
                        "cosmoshub",
                        "cosmoshub-testnet",
                        "osmosis",
                        "osmosis-testnet",
                        "celestia",
                        "celestia-testnet",
                        "dydx",
                        "axelar",
                        "ethereum",
                        "sepolia",
                        "holesky",
                        "zksync",
                        "zksync-sepolia",
                        "injective-evm-testnet",
                        "base",
                        "base-sepolia",
                        "optimism",
                        "optimism-sepolia",
                        "arbitrum",
                        "arbitrum-sepolia",
                        "bitcoin",
                        "monad-private-testnet",
                        "bitcoin-testnet",
                        "polygon",
                        "polygon-amoy",
                        "bsc",
                        "bsc-testnet",
                        "linea",
                        "linea-sepolia",
                        "avalanche",
                        "avalanche-fuji",
                        "gnosis",
                        "gnosis-chiado",
                        "moonbeam",
                        "moonriver",
                        "moonbase",
                        "fantom",
                        "mantle",
                        "litecoin",
                        "dogecoin",
                        "ton",
                        "chiliz",
                        "chiliz-testnet",
                        "injective",
                        "akash",
                        "band",
                        "dymension",
                        "kyve",
                        "neutron",
                        "terra2",
                        "stargaze",
                        "tron",
                        "evmos",
                        "irisnet",
                        "juno",
                        "lum-network",
                        "omniflix",
                        "sei",
                        "medibloc",
                        "passage",
                        "quasar",
                        "seda",
                        "sommelier",
                        "shentu",
                        "stride",
                        "chihuahua",
                        "bitsong",
                        "persistence",
                        "comdex",
                        "fetch-ai",
                        "humans-ai",
                        "ki",
                        "likecoin",
                        "mars-hub",
                        "provenance",
                        "quicksilver",
                        "saga",
                        "ux-chain",
                        "kava",
                        "starknet"
                      ]
                    },
                    "hash": {
                      "type": "string"
                    }
                  },
                  "required": ["chainId"]
                }
              }
            }
          }
        }
      }
    },
    "/api/{chainId}/transaction/broadcast/raw": {
      "post": {
        "tags": ["Transaction"],
        "summary": "Broadcast Raw Transaction",
        "description": "Broadcasts a signed transaction to the blockchain in raw format.         Unlike the standard broadcast, which builds the broadcast payload for you, this endpoint requires the final payload, ready for submission.         Returns the transaction receipt (hash) or error details in case of failure.",
        "parameters": [
          {
            "in": "path",
            "name": "chainId",
            "schema": {
              "type": "string",
              "enum": [
                "algorand",
                "cosmoshub",
                "cosmoshub-testnet",
                "osmosis",
                "osmosis-testnet",
                "celestia",
                "celestia-testnet",
                "dydx",
                "axelar",
                "ethereum",
                "sepolia",
                "holesky",
                "zksync",
                "zksync-sepolia",
                "injective-evm-testnet",
                "base",
                "base-sepolia",
                "optimism",
                "optimism-sepolia",
                "arbitrum",
                "arbitrum-sepolia",
                "bitcoin",
                "monad-private-testnet",
                "bitcoin-testnet",
                "polygon",
                "polygon-amoy",
                "bsc",
                "bsc-testnet",
                "linea",
                "linea-sepolia",
                "avalanche",
                "avalanche-fuji",
                "gnosis",
                "gnosis-chiado",
                "moonbeam",
                "moonriver",
                "moonbase",
                "fantom",
                "mantle",
                "litecoin",
                "dogecoin",
                "ton",
                "chiliz",
                "chiliz-testnet",
                "injective",
                "akash",
                "band",
                "dymension",
                "kyve",
                "neutron",
                "terra2",
                "stargaze",
                "tron",
                "evmos",
                "irisnet",
                "juno",
                "lum-network",
                "omniflix",
                "sei",
                "medibloc",
                "passage",
                "quasar",
                "seda",
                "sommelier",
                "shentu",
                "stride",
                "chihuahua",
                "bitsong",
                "persistence",
                "comdex",
                "fetch-ai",
                "humans-ai",
                "ki",
                "likecoin",
                "mars-hub",
                "provenance",
                "quicksilver",
                "saga",
                "ux-chain",
                "kava",
                "starknet"
              ]
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "payload": {
                    "type": "string"
                  }
                },
                "required": ["payload"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns a transaction receipt or error details if the transaction fails.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "chainId": {
                      "type": "string",
                      "enum": [
                        "algorand",
                        "cosmoshub",
                        "cosmoshub-testnet",
                        "osmosis",
                        "osmosis-testnet",
                        "celestia",
                        "celestia-testnet",
                        "dydx",
                        "axelar",
                        "ethereum",
                        "sepolia",
                        "holesky",
                        "zksync",
                        "zksync-sepolia",
                        "injective-evm-testnet",
                        "base",
                        "base-sepolia",
                        "optimism",
                        "optimism-sepolia",
                        "arbitrum",
                        "arbitrum-sepolia",
                        "bitcoin",
                        "monad-private-testnet",
                        "bitcoin-testnet",
                        "polygon",
                        "polygon-amoy",
                        "bsc",
                        "bsc-testnet",
                        "linea",
                        "linea-sepolia",
                        "avalanche",
                        "avalanche-fuji",
                        "gnosis",
                        "gnosis-chiado",
                        "moonbeam",
                        "moonriver",
                        "moonbase",
                        "fantom",
                        "mantle",
                        "litecoin",
                        "dogecoin",
                        "ton",
                        "chiliz",
                        "chiliz-testnet",
                        "injective",
                        "akash",
                        "band",
                        "dymension",
                        "kyve",
                        "neutron",
                        "terra2",
                        "stargaze",
                        "tron",
                        "evmos",
                        "irisnet",
                        "juno",
                        "lum-network",
                        "omniflix",
                        "sei",
                        "medibloc",
                        "passage",
                        "quasar",
                        "seda",
                        "sommelier",
                        "shentu",
                        "stride",
                        "chihuahua",
                        "bitsong",
                        "persistence",
                        "comdex",
                        "fetch-ai",
                        "humans-ai",
                        "ki",
                        "likecoin",
                        "mars-hub",
                        "provenance",
                        "quicksilver",
                        "saga",
                        "ux-chain",
                        "kava",
                        "starknet"
                      ]
                    },
                    "hash": {
                      "type": "string"
                    }
                  },
                  "required": ["chainId"]
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization"
      }
    },
    "schemas": {
      "ChainId": {
        "type": "string",
        "enum": [
          "algorand",
          "ethereum",
          "sepolia",
          "holesky",
          "zksync",
          "zksync-sepolia",
          "injective-evm-testnet",
          "base",
          "base-sepolia",
          "optimism",
          "optimism-sepolia",
          "arbitrum",
          "arbitrum-sepolia",
          "polygon",
          "polygon-amoy",
          "bsc",
          "bsc-testnet",
          "linea",
          "linea-sepolia",
          "avalanche",
          "avalanche-fuji",
          "gnosis",
          "gnosis-chiado",
          "moonbeam",
          "moonriver",
          "moonbase",
          "fantom",
          "mantle",
          "chiliz",
          "chiliz-testnet",
          "ton",
          "tron",
          "rootstock",
          "rootstock-testnet",
          "bitcoin",
          "bitcoin-testnet",
          "litecoin",
          "dogecoin",
          "starknet",
          "monad-private-testnet",
          "bitsong",
          "chihuahua",
          "seda",
          "persistence",
          "comdex",
          "humans-ai",
          "ki",
          "mars-hub",
          "provenance",
          "quicksilver",
          "saga",
          "ux-chain",
          "kava",
          "sei",
          "fetch-ai",
          "cosmoshub",
          "osmosis",
          "celestia",
          "dydx",
          "axelar",
          "evmos",
          "irisnet",
          "juno",
          "lum-network",
          "omniflix",
          "medibloc",
          "passage",
          "quasar",
          "sommelier",
          "shentu",
          "stride",
          "neutron",
          "terra2",
          "akash",
          "dymension",
          "band",
          "stargaze",
          "kyve",
          "likecoin",
          "osmosis-testnet",
          "celestia-testnet",
          "cosmoshub-testnet",
          "injective"
        ],
        "description": "Unique adamik identifier of the chain",
        "example": "bitcoin"
      },
      "ChainSupportedFeatures": {
        "type": "object",
        "properties": {
          "read": {
            "type": "object",
            "properties": {
              "token": {
                "type": "boolean"
              },
              "validators": {
                "type": "boolean"
              },
              "transaction": {
                "type": "object",
                "properties": {
                  "native": {
                    "type": "boolean"
                  },
                  "tokens": {
                    "type": "boolean"
                  },
                  "staking": {
                    "type": "boolean"
                  }
                },
                "required": ["native", "tokens", "staking"]
              },
              "account": {
                "type": "object",
                "properties": {
                  "balances": {
                    "type": "object",
                    "properties": {
                      "native": {
                        "type": "boolean"
                      },
                      "tokens": {
                        "type": "boolean"
                      },
                      "staking": {
                        "type": "boolean"
                      }
                    },
                    "required": ["native", "tokens", "staking"]
                  },
                  "transactions": {
                    "type": "object",
                    "properties": {
                      "native": {
                        "type": "boolean"
                      },
                      "tokens": {
                        "type": "boolean"
                      },
                      "staking": {
                        "type": "boolean"
                      }
                    },
                    "required": ["native", "tokens", "staking"]
                  }
                },
                "required": ["balances", "transactions"]
              }
            },
            "required": ["token", "validators", "transaction", "account"]
          },
          "write": {
            "type": "object",
            "properties": {
              "transaction": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "object",
                    "properties": {
                      "deployAccount": {
                        "type": "boolean"
                      },
                      "transfer": {
                        "type": "boolean"
                      },
                      "transferToken": {
                        "type": "boolean"
                      },
                      "delegate": {
                        "type": "boolean"
                      },
                      "redelegate": {
                        "type": "boolean"
                      },
                      "undelegate": {
                        "type": "boolean"
                      },
                      "claimRewards": {
                        "type": "boolean"
                      }
                    },
                    "additionalProperties": false
                  },
                  "field": {
                    "type": "object",
                    "properties": {
                      "memo": {
                        "type": "boolean"
                      }
                    },
                    "required": ["memo"]
                  }
                },
                "required": ["type", "field"]
              }
            },
            "required": ["transaction"]
          }
        },
        "required": ["read", "write"],
        "description": "List of supported features for the chain"
      }
    }
  }
}
